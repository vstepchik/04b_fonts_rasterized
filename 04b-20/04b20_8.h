#pragma once
#include <Adafruit_GFX.h>

// Font: 04b20
const uint8_t Font_04b20_Bitmaps[] PROGMEM = {
    0x00, /* 0x20 space */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0x00,     0xC0,     0xC0, /* 0x21 exclam */
    0xD8,     0xD8,     0xD8,     0xD8, /* 0x22 quotedbl */
    0x3300,     0xFFC0,     0xFFC0,     0x3300,     0x3300,     0xFFC0,     0xFFC0,     0x3300, /* 0x23 numbersign */
    0x7FC0,     0xFFC0,     0xCC00,     0xFF80,     0x7FC0,     0xCC0,     0xFFC0,     0xFF80, /* 0x24 dollar */
    0xE180,     0xE380,     0xE700,     0xE00,     0x1C00,     0x39C0,     0x71C0,     0x61C0, /* 0x25 percent */
    0x7E00,     0xFF00,     0xC300,     0x7EC0,     0x7FC0,     0xC380,     0xFFC0,     0x7EC0, /* 0x26 ampersand */
    0xC0,     0xC0,     0xC0,     0xC0, /* 0x27 quotesingle */
    0x30,     0x70,     0xE0,     0xC0,     0xC0,     0xE0,     0x70,     0x30, /* 0x28 parenleft */
    0xC0,     0xE0,     0x70,     0x30,     0x30,     0x70,     0xE0,     0xC0, /* 0x29 parenright */
    0xD8,     0xF8,     0x70,     0xF8,     0xD8, /* 0x2A asterisk */
    0xC00,     0xC00,     0xC00,     0xFFC0,     0xFFC0,     0xC00,     0xC00,     0xC00, /* 0x2B plus */
    0xC0,     0xC0,     0xC0,     0xC0, /* 0x2C comma */
    0xFFC0,     0xFFC0, /* 0x2D hyphen */
    0xC0,     0xC0, /* 0x2E period */
    0x03,     0x07,     0x0E,     0x1C,     0x38,     0x70,     0xE0,     0xC0, /* 0x2F slash */
    0x7F80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x30 zero */
    0xE0,     0xF0,     0x30,     0x30,     0x30,     0x30,     0x30,     0x30, /* 0x31 one */
    0xFF80,     0xFFC0,     0xC0,     0x7FC0,     0xFF80,     0xC000,     0xFFC0,     0xFFC0, /* 0x32 two */
    0xFF80,     0xFFC0,     0xC0,     0x7FC0,     0x7FC0,     0xC0,     0xFFC0,     0xFF80, /* 0x33 three */
    0xC300,     0xC300,     0xC300,     0xC300,     0xFFC0,     0x7FC0,     0x300,     0x300, /* 0x34 four */
    0xFFC0,     0xFFC0,     0xC000,     0xFF80,     0xFFC0,     0xC0,     0xFFC0,     0xFF80, /* 0x35 five */
    0x7F80,     0xFF80,     0xC000,     0xFF80,     0xFFC0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x36 six */
    0xFF80,     0xFFC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x37 seven */
    0x7F80,     0xFFC0,     0xC0C0,     0xFFC0,     0xFFC0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x38 eight */
    0x7F80,     0xFFC0,     0xC0C0,     0xFFC0,     0x7FC0,     0xC0,     0x7FC0,     0x7F80, /* 0x39 nine */
    0xC0,     0xC0,     0x00,     0x00,     0xC0,     0xC0, /* 0x3A colon */
    0xC0,     0xC0,     0x00,     0x00,     0xC0,     0xC0,     0xC0, /* 0x3B semicolon */
    0x18,     0x38,     0x70,     0xE0,     0xE0,     0x70,     0x38,     0x18, /* 0x3C less */
    0xFFC0,     0xFFC0,     0x00,     0x00,     0xFFC0,     0xFFC0, /* 0x3D equal */
    0xC0,     0xE0,     0x70,     0x38,     0x38,     0x70,     0xE0,     0xC0, /* 0x3E greater */
    0x7F80,     0xFFC0,     0xC0C0,     0xFC0,     0xF80,     0x00,     0xC00,     0xC00, /* 0x3F question */
    0x7F80,     0xFFC0,     0xC0C0,     0xDFC0,     0xDFC0,     0xD8C0,     0xFFC0,     0x7F80, /* 0x40 at */
    0x7F80,     0xFFC0,     0xC0C0,     0xFFC0,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0, /* 0x41 A */
    0xFF80,     0xFFC0,     0xC0C0,     0xFFC0,     0xFFC0,     0xC0C0,     0xFFC0,     0xFF80, /* 0x42 B */
    0x7FC0,     0xFFC0,     0xC000,     0xC000,     0xC000,     0xC000,     0xFFC0,     0x7FC0, /* 0x43 C */
    0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80, /* 0x44 D */
    0x7FC0,     0xFFC0,     0xC000,     0xFFC0,     0xFFC0,     0xC000,     0xFFC0,     0x7FC0, /* 0x45 E */
    0x7FC0,     0xFFC0,     0xC000,     0xFFC0,     0xFFC0,     0xC000,     0xC000,     0xC000, /* 0x46 F */
    0x7FC0,     0xFFC0,     0xC000,     0xCFC0,     0xCFC0,     0xC0C0,     0xFFC0,     0x7FC0, /* 0x47 G */
    0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0, /* 0x48 H */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x49 I */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x4A J */
    0xC0C0,     0xC1C0,     0xC380,     0xFF00,     0xFF00,     0xC380,     0xC1C0,     0xC0C0, /* 0x4B K */
    0xC000,     0xC000,     0xC000,     0xC000,     0xC000,     0xC000,     0xFFC0,     0x7FC0, /* 0x4C L */
    0xC0C0,     0xE1C0,     0xF3C0,     0xFFC0,     0xDEC0,     0xCCC0,     0xC0C0,     0xC0C0, /* 0x4D M */
    0xE0C0,     0xF0C0,     0xF8C0,     0xDCC0,     0xCEC0,     0xC7C0,     0xC3C0,     0xC1C0, /* 0x4E N */
    0x7F80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x4F O */
    0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80,     0xC000,     0xC000, /* 0x50 P */
    0x7F00,     0xFF80,     0xC180,     0xC180,     0xC180,     0xC180,     0xFFC0,     0x7FC0, /* 0x51 Q */
    0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xFF80,     0xFF80,     0xC1C0,     0xC0C0, /* 0x52 R */
    0x7FC0,     0xFFC0,     0xC000,     0xFF80,     0x7FC0,     0xC0,     0xFFC0,     0xFF80, /* 0x53 S */
    0xFFC0,     0xFFC0,     0xC00,     0xC00,     0xC00,     0xC00,     0xC00,     0xC00, /* 0x54 T */
    0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x55 U */
    0xC0C0,     0xC0C0,     0xC0C0,     0xE1C0,     0x7380,     0x3F00,     0x1E00,     0xC00, /* 0x56 V */
    0xC0C0,     0xC0C0,     0xCCC0,     0xDEC0,     0xFFC0,     0xF3C0,     0xE1C0,     0xC0C0, /* 0x57 W */
    0xC0C0,     0xE1C0,     0x7380,     0x3F00,     0x3F00,     0x7380,     0xE1C0,     0xC0C0, /* 0x58 X */
    0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7FC0,     0xC0,     0x7FC0,     0x7F80, /* 0x59 Y */
    0xFFC0,     0xFFC0,     0xC0,     0x7FC0,     0xFF80,     0xC000,     0xFFC0,     0xFFC0, /* 0x5A Z */
    0xF0,     0xF0,     0xC0,     0xC0,     0xC0,     0xC0,     0xF0,     0xF0, /* 0x5B bracketleft */
    0xC0,     0xE0,     0x70,     0x38,     0x1C,     0x0E,     0x07,     0x03, /* 0x5C backslash */
    0xF0,     0xF0,     0x30,     0x30,     0x30,     0x30,     0xF0,     0xF0, /* 0x5D bracketright */
    0x70,     0xF8,     0xD8, /* 0x5E asciicircum */
    0xFFC0,     0xFFC0, /* 0x5F underscore */
    0xC0,     0xE0,     0x60, /* 0x60 grave */
    0x7F80,     0x7FC0,     0xC0,     0x7FC0,     0xFFC0,     0xC0C0,     0xFFC0,     0x7FC0, /* 0x61 a */
    0xC000,     0xC000,     0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80, /* 0x62 b */
    0x7FC0,     0xFFC0,     0xC000,     0xC000,     0xC000,     0xC000,     0xFFC0,     0x7FC0, /* 0x63 c */
    0xC0,     0xC0,     0x7FC0,     0xFFC0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7FC0, /* 0x64 d */
    0x7F80,     0xFFC0,     0xC0C0,     0xFFC0,     0xFFC0,     0xC000,     0xFF80,     0x7F80, /* 0x65 e */
    0x1FC0,     0x3FC0,     0x3000,     0xFFC0,     0xFFC0,     0x3000,     0x3000,     0x3000, /* 0x66 f */
    0x7FC0,     0xFFC0,     0xC0C0,     0xFFC0,     0x7FC0,     0xC0,     0x7FC0,     0x7F80, /* 0x67 g */
    0xC000,     0xC000,     0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0, /* 0x68 h */
    0xC0,     0xC0,     0x00,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x69 i */
    0xC0,     0xC0,     0x00,     0xC0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x6A j */
    0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80,     0xC300,     0xC300,     0xC300, /* 0x6B k */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x6C l */
    0xFF80,     0xFFC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0, /* 0x6D m */
    0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0, /* 0x6E n */
    0x7F80,     0xFFC0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x6F o */
    0xFF80,     0xFFC0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80,     0xC000,     0xC000, /* 0x70 p */
    0x7FC0,     0xFFC0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7FC0,     0xC0,     0xC0, /* 0x71 q */
    0x7FC0,     0xFFC0,     0xC000,     0xC000,     0xC000,     0xC000,     0xC000,     0xC000, /* 0x72 r */
    0x7FC0,     0xFFC0,     0xC000,     0xFF80,     0x7FC0,     0xC0,     0xFFC0,     0xFF80, /* 0x73 s */
    0x3000,     0x3000,     0xFFC0,     0xFFC0,     0x3000,     0x3000,     0x3FC0,     0x1FC0, /* 0x74 t */
    0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7F80, /* 0x75 u */
    0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0xFF80, /* 0x76 v */
    0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xCCC0,     0xFFC0,     0xFF80, /* 0x77 w */
    0xC0C0,     0xE1C0,     0x7380,     0x3F00,     0x3F00,     0x7380,     0xE1C0,     0xC0C0, /* 0x78 x */
    0xC0C0,     0xC0C0,     0xC0C0,     0xFFC0,     0x7FC0,     0xC0,     0x7FC0,     0x7F80, /* 0x79 y */
    0xFFC0,     0xFFC0,     0xC0,     0x7FC0,     0xFF80,     0xC000,     0xFFC0,     0xFFC0, /* 0x7A z */
    0x30,     0x70,     0x60,     0xE0,     0xE0,     0x60,     0x70,     0x30, /* 0x7B braceleft */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x7C bar */
    0xC0,     0xE0,     0x60,     0x70,     0x70,     0x60,     0xE0,     0xC0, /* 0x7D braceright */
    0xF0,     0xF0, /* 0x7E asciitilde */
};

const GFXglyph Font_04b20_Glyphs[] PROGMEM = {
{ 0, 1, 1, 2, 0, -1 }, /* 0x20 space */
{ 1, 2, 8, 3, 0, -8 }, /* 0x21 exclam */
{ 9, 5, 4, 6, 0, -8 }, /* 0x22 quotedbl */
{ 13, 10, 8, 11, 0, -8 }, /* 0x23 numbersign */
{ 21, 10, 8, 11, 0, -8 }, /* 0x24 dollar */
{ 29, 10, 8, 11, 0, -8 }, /* 0x25 percent */
{ 37, 10, 8, 11, 0, -8 }, /* 0x26 ampersand */
{ 45, 2, 4, 3, 0, -8 }, /* 0x27 quotesingle */
{ 49, 4, 8, 5, 0, -8 }, /* 0x28 parenleft */
{ 57, 4, 8, 5, 0, -8 }, /* 0x29 parenright */
{ 65, 5, 5, 6, 0, -8 }, /* 0x2A asterisk */
{ 70, 10, 8, 11, 0, -8 }, /* 0x2B plus */
{ 78, 2, 4, 3, 0, -4 }, /* 0x2C comma */
{ 82, 10, 2, 11, 0, -5 }, /* 0x2D hyphen */
{ 84, 2, 2, 3, 0, -2 }, /* 0x2E period */
{ 86, 8, 8, 9, 0, -8 }, /* 0x2F slash */
{ 94, 10, 8, 11, 0, -8 }, /* 0x30 zero */
{ 102, 4, 8, 5, 0, -8 }, /* 0x31 one */
{ 110, 10, 8, 11, 0, -8 }, /* 0x32 two */
{ 118, 10, 8, 11, 0, -8 }, /* 0x33 three */
{ 126, 10, 8, 11, 0, -8 }, /* 0x34 four */
{ 134, 10, 8, 11, 0, -8 }, /* 0x35 five */
{ 142, 10, 8, 11, 0, -8 }, /* 0x36 six */
{ 150, 10, 8, 11, 0, -8 }, /* 0x37 seven */
{ 158, 10, 8, 11, 0, -8 }, /* 0x38 eight */
{ 166, 10, 8, 11, 0, -8 }, /* 0x39 nine */
{ 174, 2, 6, 3, 0, -7 }, /* 0x3A colon */
{ 180, 2, 7, 3, 0, -7 }, /* 0x3B semicolon */
{ 187, 5, 8, 6, 0, -8 }, /* 0x3C less */
{ 195, 10, 6, 11, 0, -7 }, /* 0x3D equal */
{ 201, 5, 8, 6, 0, -8 }, /* 0x3E greater */
{ 209, 10, 8, 11, 0, -8 }, /* 0x3F question */
{ 217, 10, 8, 11, 0, -8 }, /* 0x40 at */
{ 225, 10, 8, 11, 0, -8 }, /* 0x41 A */
{ 233, 10, 8, 11, 0, -8 }, /* 0x42 B */
{ 241, 10, 8, 11, 0, -8 }, /* 0x43 C */
{ 249, 10, 8, 11, 0, -8 }, /* 0x44 D */
{ 257, 10, 8, 11, 0, -8 }, /* 0x45 E */
{ 265, 10, 8, 11, 0, -8 }, /* 0x46 F */
{ 273, 10, 8, 11, 0, -8 }, /* 0x47 G */
{ 281, 10, 8, 11, 0, -8 }, /* 0x48 H */
{ 289, 2, 8, 3, 0, -8 }, /* 0x49 I */
{ 297, 10, 8, 11, 0, -8 }, /* 0x4A J */
{ 305, 10, 8, 11, 0, -8 }, /* 0x4B K */
{ 313, 10, 8, 11, 0, -8 }, /* 0x4C L */
{ 321, 10, 8, 11, 0, -8 }, /* 0x4D M */
{ 329, 10, 8, 11, 0, -8 }, /* 0x4E N */
{ 337, 10, 8, 11, 0, -8 }, /* 0x4F O */
{ 345, 10, 8, 11, 0, -8 }, /* 0x50 P */
{ 353, 10, 8, 11, 0, -8 }, /* 0x51 Q */
{ 361, 10, 8, 11, 0, -8 }, /* 0x52 R */
{ 369, 10, 8, 11, 0, -8 }, /* 0x53 S */
{ 377, 10, 8, 11, 0, -8 }, /* 0x54 T */
{ 385, 10, 8, 11, 0, -8 }, /* 0x55 U */
{ 393, 10, 8, 11, 0, -8 }, /* 0x56 V */
{ 401, 10, 8, 11, 0, -8 }, /* 0x57 W */
{ 409, 10, 8, 11, 0, -8 }, /* 0x58 X */
{ 417, 10, 8, 11, 0, -8 }, /* 0x59 Y */
{ 425, 10, 8, 11, 0, -8 }, /* 0x5A Z */
{ 433, 4, 8, 5, 0, -8 }, /* 0x5B bracketleft */
{ 441, 8, 8, 9, 0, -8 }, /* 0x5C backslash */
{ 449, 4, 8, 5, 0, -8 }, /* 0x5D bracketright */
{ 457, 5, 3, 6, 0, -8 }, /* 0x5E asciicircum */
{ 460, 10, 2, 11, 0, -2 }, /* 0x5F underscore */
{ 462, 3, 3, 4, 0, -8 }, /* 0x60 grave */
{ 465, 10, 8, 11, 0, -8 }, /* 0x61 a */
{ 473, 10, 8, 11, 0, -8 }, /* 0x62 b */
{ 481, 10, 8, 11, 0, -8 }, /* 0x63 c */
{ 489, 10, 8, 11, 0, -8 }, /* 0x64 d */
{ 497, 10, 8, 11, 0, -8 }, /* 0x65 e */
{ 505, 10, 8, 11, 0, -8 }, /* 0x66 f */
{ 513, 10, 8, 11, 0, -8 }, /* 0x67 g */
{ 521, 10, 8, 11, 0, -8 }, /* 0x68 h */
{ 529, 2, 8, 3, 0, -8 }, /* 0x69 i */
{ 537, 10, 8, 11, 0, -8 }, /* 0x6A j */
{ 545, 10, 8, 11, 0, -8 }, /* 0x6B k */
{ 553, 2, 8, 3, 0, -8 }, /* 0x6C l */
{ 561, 10, 8, 11, 0, -8 }, /* 0x6D m */
{ 569, 10, 8, 11, 0, -8 }, /* 0x6E n */
{ 577, 10, 8, 11, 0, -8 }, /* 0x6F o */
{ 585, 10, 8, 11, 0, -8 }, /* 0x70 p */
{ 593, 10, 8, 11, 0, -8 }, /* 0x71 q */
{ 601, 10, 8, 11, 0, -8 }, /* 0x72 r */
{ 609, 10, 8, 11, 0, -8 }, /* 0x73 s */
{ 617, 10, 8, 11, 0, -8 }, /* 0x74 t */
{ 625, 10, 8, 11, 0, -8 }, /* 0x75 u */
{ 633, 10, 8, 11, 0, -8 }, /* 0x76 v */
{ 641, 10, 8, 11, 0, -8 }, /* 0x77 w */
{ 649, 10, 8, 11, 0, -8 }, /* 0x78 x */
{ 657, 10, 8, 11, 0, -8 }, /* 0x79 y */
{ 665, 10, 8, 11, 0, -8 }, /* 0x7A z */
{ 673, 4, 8, 5, 0, -8 }, /* 0x7B braceleft */
{ 681, 2, 8, 3, 0, -8 }, /* 0x7C bar */
{ 689, 4, 8, 5, 0, -8 }, /* 0x7D braceright */
{ 697, 4, 2, 5, 0, -8 }, /* 0x7E asciitilde */
};

const GFXfont Font_04b20 PROGMEM = {(uint8_t *) Font_04b20_Bitmaps,  (GFXglyph *)Font_04b20_Glyphs, 0x20, 0x7E,  8};
