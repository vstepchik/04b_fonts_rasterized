#pragma once
#include <Adafruit_GFX.h>

// Font: 04b19
const uint8_t Font_04b19_Bitmaps[] PROGMEM = {
    0x00, /* 0x20 space */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0x00,     0xE0,     0xE0,     0xE0, /* 0x21 exclam */
    0xEE,     0xEE,     0xEE,     0xEE, /* 0x22 quotedbl */
    0x3B80,     0x3B80,     0xFFE0,     0xFFE0,     0xFFE0,     0x3B80,     0xFFE0,     0xFFE0,     0xFFE0,     0x3B80,     0x3B80, /* 0x23 numbersign */
    0xE00,     0xFFC0,     0xFFC0,     0xFFC0,     0xEE00,     0xFFC0,     0xFFC0,     0xFFC0,     0x1DC0,     0xFFC0,     0xFFC0,     0xFFC0,     0x1C00, /* 0x24 dollar */
    0xEE,     0xEE,     0xEE,     0x0E,     0xFE,     0xFE,     0xFE,     0xE0,     0xEE,     0xEE,     0xEE, /* 0x25 percent */
    0xFE00,     0xFE00,     0xFE00,     0xEE00,     0xFE00,     0x7DC0,     0xFFC0,     0xEFC0,     0xFF00,     0xFE00,     0xFE00, /* 0x26 ampersand */
    0xE0,     0xE0,     0xE0,     0xE0, /* 0x27 quotesingle */
    0x38,     0x38,     0xF8,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xF8,     0x38,     0x38, /* 0x28 parenleft */
    0xE0,     0xE0,     0xF8,     0x38,     0x38,     0x38,     0x38,     0x38,     0xF8,     0xE0,     0xE0, /* 0x29 parenright */
    0xEE,     0xEE,     0xFE,     0x38,     0xFE,     0xEE,     0xEE, /* 0x2A asterisk */
    0x1C00,     0x1C00,     0x1C00,     0xFF80,     0xFF80,     0xFF80,     0x1C00,     0x1C00,     0x1C00, /* 0x2B plus */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x2C comma */
    0xFE,     0xFE,     0xFE, /* 0x2D hyphen */
    0xE0,     0xE0,     0xE0, /* 0x2E period */
    0x1C,     0x1C,     0x1C,     0x38,     0x38,     0x38,     0x70,     0x70,     0x70,     0xE0,     0xE0,     0xE0, /* 0x2F slash */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x30 zero */
    0xF0,     0xF0,     0xF0,     0x70,     0x70,     0x70,     0x70,     0x70,     0x70,     0x70,     0x70, /* 0x31 one */
    0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE, /* 0x32 two */
    0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x33 three */
    0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0x0E,     0x0E, /* 0x34 four */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x35 five */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x36 six */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0x0E,     0x0E,     0x0E,     0x0E,     0x0E, /* 0x37 seven */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x38 eight */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x39 nine */
    0xE0,     0xE0,     0xE0,     0x00,     0xE0,     0xE0,     0xE0, /* 0x3A colon */
    0xE0,     0xE0,     0xE0,     0x00,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x3B semicolon */
    0x0E,     0x0E,     0x38,     0x38,     0xF8,     0xE0,     0xF8,     0x38,     0x38,     0x0E,     0x0E, /* 0x3C less */
    0xFE,     0xFE,     0xFE,     0x00,     0xFE,     0xFE,     0xFE, /* 0x3D equal */
    0xE0,     0xE0,     0x38,     0x38,     0x3E,     0x0E,     0x3E,     0x38,     0x38,     0xE0,     0xE0, /* 0x3E greater */
    0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE,     0x00,     0xE0,     0xE0,     0xE0, /* 0x3F question */
    0xFFE0,     0xFFE0,     0xFFE0,     0xE0E0,     0xEFE0,     0xEFE0,     0xEFE0,     0xEEE0,     0xFFE0,     0xFFE0,     0xFFE0, /* 0x40 at */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE, /* 0x41 A */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFC,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x42 B */
    0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xE0,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE, /* 0x43 C */
    0xFC,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFC, /* 0x44 D */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE, /* 0x45 E */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x46 F */
    0xFE,     0xFE,     0xFE,     0xE0,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x47 G */
    0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE, /* 0x48 H */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x49 I */
    0x0E,     0x0E,     0x0E,     0x0E,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x4A J */
    0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFC,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE, /* 0x4B K */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xF8,     0xF8,     0xF8, /* 0x4C L */
    0xFFE0,     0xFFE0,     0xFFE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0, /* 0x4D M */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE, /* 0x4E N */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x4F O */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0xE0,     0xE0, /* 0x50 P */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0x38, /* 0x51 Q */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFC,     0xFE,     0xFE,     0xEE, /* 0x52 R */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x53 S */
    0xFE,     0xFE,     0xFE,     0x38,     0x38,     0x38,     0x38,     0x38,     0x38,     0x38,     0x38, /* 0x54 T */
    0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x55 U */
    0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0x7C, /* 0x56 V */
    0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xFFE0,     0xFFE0,     0xFFE0, /* 0x57 W */
    0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0x7C,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE, /* 0x58 X */
    0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0x38,     0x38,     0x38,     0x38, /* 0x59 Y */
    0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE, /* 0x5A Z */
    0xF0,     0xF0,     0xF0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xF0,     0xF0,     0xF0, /* 0x5B bracketleft */
    0xE0,     0xE0,     0xE0,     0x70,     0x70,     0x70,     0x38,     0x38,     0x38,     0x1C,     0x1C,     0x1C, /* 0x5C backslash */
    0xF0,     0xF0,     0xF0,     0x70,     0x70,     0x70,     0x70,     0x70,     0xF0,     0xF0,     0xF0, /* 0x5D bracketright */
    0x38,     0x38,     0xFE,     0xEE,     0xEE, /* 0x5E asciicircum */
    0xFE,     0xFE,     0xFE, /* 0x5F underscore */
    0xF8,     0xF8,     0xF8, /* 0x60 grave */
    0x7E,     0x7E,     0x7E,     0x0E,     0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x61 a */
    0xE0,     0xE0,     0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x62 b */
    0xFE,     0xFE,     0xFE,     0xEE,     0xE0,     0xEE,     0xFE,     0xFE,     0xFE,     0xFE, /* 0x63 c */
    0x0E,     0x0E,     0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x64 d */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE, /* 0x65 e */
    0x7E,     0x7E,     0x7E,     0x70,     0xFE,     0xFE,     0xFE,     0x1C,     0xFC,     0xFC,     0xFC, /* 0x66 f */
    0xFE,     0xFE,     0xFE,     0xEE,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x67 g */
    0xE0,     0xE0,     0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE, /* 0x68 h */
    0xE0,     0xE0,     0xE0,     0x00,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x69 i */
    0x0E,     0x0E,     0x0E,     0x00,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x6A j */
    0xE0,     0xE0,     0xEE,     0xEE,     0xFE,     0xFE,     0xFC,     0xFE,     0xFE,     0xEE,     0xEE, /* 0x6B k */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x6C l */
    0xFFE0,     0xFFE0,     0xFFE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0, /* 0x6D m */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE, /* 0x6E n */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0xFE, /* 0x6F o */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0xE0,     0xE0, /* 0x70 p */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0x0E,     0x0E, /* 0x71 q */
    0xFE,     0xFE,     0xFE,     0xEE,     0xEE,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x72 r */
    0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE, /* 0x73 s */
    0xE0,     0xE0,     0xFE,     0xFE,     0xFE,     0xE0,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x74 t */
    0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE, /* 0x75 u */
    0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0x7C, /* 0x76 v */
    0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xEEE0,     0xFFE0,     0xFFE0,     0xFFE0, /* 0x77 w */
    0xEE,     0xEE,     0xFE,     0xFE,     0x7C,     0xFE,     0xFE,     0xEE,     0xEE,     0xEE, /* 0x78 x */
    0xEE,     0xEE,     0xEE,     0xEE,     0xFE,     0xFE,     0xFE,     0x0E,     0x7E,     0x7E,     0x7E, /* 0x79 y */
    0xFE,     0xFE,     0xFE,     0x0E,     0xFE,     0xFE,     0xFE,     0xE0,     0xFE,     0xFE,     0xFE, /* 0x7A z */
    0x78,     0x78,     0x78,     0x70,     0xF0,     0xF0,     0xF0,     0x70,     0x78,     0x78,     0x78, /* 0x7B braceleft */
    0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0,     0xE0, /* 0x7C bar */
    0xF0,     0xF0,     0xF0,     0x70,     0x78,     0x78,     0x78,     0x70,     0xF0,     0xF0,     0xF0, /* 0x7D braceright */
    0xF8,     0xF8,     0xF8, /* 0x7E asciitilde */
    0x00, /* 0xA0 nonbreakingspace */
};

const GFXglyph Font_04b19_Glyphs[] PROGMEM = {
{ 0, 8, 1, 2, 0, -1 }, /* 0x20 space */
{ 1, 8, 11, 4, 0, -11 }, /* 0x21 exclam */
{ 12, 8, 4, 8, 0, -11 }, /* 0x22 quotedbl */
{ 16, 8, 11, 12, 0, -11 }, /* 0x23 numbersign */
{ 27, 8, 13, 11, 0, -12 }, /* 0x24 dollar */
{ 40, 8, 11, 8, 0, -11 }, /* 0x25 percent */
{ 51, 8, 11, 11, 0, -11 }, /* 0x26 ampersand */
{ 62, 8, 4, 4, 0, -11 }, /* 0x27 quotesingle */
{ 66, 8, 11, 6, 0, -11 }, /* 0x28 parenleft */
{ 77, 8, 11, 6, 0, -11 }, /* 0x29 parenright */
{ 88, 8, 7, 8, 0, -11 }, /* 0x2A asterisk */
{ 95, 8, 9, 10, 0, -10 }, /* 0x2B plus */
{ 104, 8, 5, 4, 0, -3 }, /* 0x2C comma */
{ 109, 8, 3, 8, 0, -7 }, /* 0x2D hyphen */
{ 112, 8, 3, 4, 0, -3 }, /* 0x2E period */
{ 115, 8, 12, 7, 0, -11 }, /* 0x2F slash */
{ 127, 8, 11, 8, 0, -11 }, /* 0x30 zero */
{ 138, 8, 11, 5, 0, -11 }, /* 0x31 one */
{ 149, 8, 11, 8, 0, -11 }, /* 0x32 two */
{ 160, 8, 11, 8, 0, -11 }, /* 0x33 three */
{ 171, 8, 11, 8, 0, -11 }, /* 0x34 four */
{ 182, 8, 11, 8, 0, -11 }, /* 0x35 five */
{ 193, 8, 11, 8, 0, -11 }, /* 0x36 six */
{ 204, 8, 11, 8, 0, -11 }, /* 0x37 seven */
{ 215, 8, 11, 8, 0, -11 }, /* 0x38 eight */
{ 226, 8, 11, 8, 0, -11 }, /* 0x39 nine */
{ 237, 8, 7, 4, 0, -9 }, /* 0x3A colon */
{ 244, 8, 9, 4, 0, -9 }, /* 0x3B semicolon */
{ 253, 8, 11, 8, 0, -11 }, /* 0x3C less */
{ 264, 8, 7, 8, 0, -9 }, /* 0x3D equal */
{ 271, 8, 11, 8, 0, -11 }, /* 0x3E greater */
{ 282, 8, 11, 8, 0, -11 }, /* 0x3F question */
{ 293, 8, 11, 12, 0, -11 }, /* 0x40 at */
{ 304, 8, 11, 8, 0, -11 }, /* 0x41 A */
{ 315, 8, 11, 8, 0, -11 }, /* 0x42 B */
{ 326, 8, 11, 8, 0, -11 }, /* 0x43 C */
{ 337, 8, 11, 8, 0, -11 }, /* 0x44 D */
{ 348, 8, 11, 8, 0, -11 }, /* 0x45 E */
{ 359, 8, 11, 8, 0, -11 }, /* 0x46 F */
{ 370, 8, 11, 8, 0, -11 }, /* 0x47 G */
{ 381, 8, 11, 8, 0, -11 }, /* 0x48 H */
{ 392, 8, 11, 4, 0, -11 }, /* 0x49 I */
{ 403, 8, 11, 8, 0, -11 }, /* 0x4A J */
{ 414, 8, 11, 8, 0, -11 }, /* 0x4B K */
{ 425, 8, 11, 6, 0, -11 }, /* 0x4C L */
{ 436, 8, 11, 12, 0, -11 }, /* 0x4D M */
{ 447, 8, 11, 8, 0, -11 }, /* 0x4E N */
{ 458, 8, 11, 8, 0, -11 }, /* 0x4F O */
{ 469, 8, 11, 8, 0, -11 }, /* 0x50 P */
{ 480, 8, 12, 8, 0, -11 }, /* 0x51 Q */
{ 492, 8, 11, 8, 0, -11 }, /* 0x52 R */
{ 503, 8, 11, 8, 0, -11 }, /* 0x53 S */
{ 514, 8, 11, 8, 0, -11 }, /* 0x54 T */
{ 525, 8, 11, 8, 0, -11 }, /* 0x55 U */
{ 536, 8, 11, 8, 0, -11 }, /* 0x56 V */
{ 547, 8, 11, 12, 0, -11 }, /* 0x57 W */
{ 558, 8, 11, 8, 0, -11 }, /* 0x58 X */
{ 569, 8, 11, 8, 0, -11 }, /* 0x59 Y */
{ 580, 8, 11, 8, 0, -11 }, /* 0x5A Z */
{ 591, 8, 11, 5, 0, -11 }, /* 0x5B bracketleft */
{ 602, 8, 12, 7, 0, -11 }, /* 0x5C backslash */
{ 614, 8, 11, 5, 0, -11 }, /* 0x5D bracketright */
{ 625, 8, 5, 8, 0, -11 }, /* 0x5E asciicircum */
{ 630, 8, 3, 8, 0, -3 }, /* 0x5F underscore */
{ 633, 8, 3, 6, 0, -11 }, /* 0x60 grave */
{ 636, 8, 11, 8, 0, -11 }, /* 0x61 a */
{ 647, 8, 11, 8, 0, -11 }, /* 0x62 b */
{ 658, 8, 10, 8, 0, -10 }, /* 0x63 c */
{ 668, 8, 11, 8, 0, -11 }, /* 0x64 d */
{ 679, 8, 11, 8, 0, -11 }, /* 0x65 e */
{ 690, 8, 11, 8, 0, -11 }, /* 0x66 f */
{ 701, 8, 11, 8, 0, -9 }, /* 0x67 g */
{ 712, 8, 11, 8, 0, -11 }, /* 0x68 h */
{ 723, 8, 11, 4, 0, -11 }, /* 0x69 i */
{ 734, 8, 11, 8, 0, -11 }, /* 0x6A j */
{ 745, 8, 11, 8, 0, -11 }, /* 0x6B k */
{ 756, 8, 11, 4, 0, -11 }, /* 0x6C l */
{ 767, 8, 10, 12, 0, -10 }, /* 0x6D m */
{ 777, 8, 10, 8, 0, -10 }, /* 0x6E n */
{ 787, 8, 10, 8, 0, -10 }, /* 0x6F o */
{ 797, 8, 11, 8, 0, -9 }, /* 0x70 p */
{ 808, 8, 11, 8, 0, -9 }, /* 0x71 q */
{ 819, 8, 10, 8, 0, -10 }, /* 0x72 r */
{ 829, 8, 11, 8, 0, -11 }, /* 0x73 s */
{ 840, 8, 11, 8, 0, -11 }, /* 0x74 t */
{ 851, 8, 10, 8, 0, -10 }, /* 0x75 u */
{ 861, 8, 10, 8, 0, -10 }, /* 0x76 v */
{ 871, 8, 10, 12, 0, -10 }, /* 0x77 w */
{ 881, 8, 10, 8, 0, -10 }, /* 0x78 x */
{ 891, 8, 11, 8, 0, -9 }, /* 0x79 y */
{ 902, 8, 11, 8, 0, -11 }, /* 0x7A z */
{ 913, 8, 11, 6, 0, -11 }, /* 0x7B braceleft */
{ 924, 8, 11, 4, 0, -11 }, /* 0x7C bar */
{ 935, 8, 11, 6, 0, -11 }, /* 0x7D braceright */
{ 946, 8, 3, 6, 0, -11 }, /* 0x7E asciitilde */
{ 949, 8, 1, 2, 0, -1 }, /* 0xA0 nonbreakingspace */
};

const GFXfont Font_04b19 PROGMEM = {(uint8_t *) Font_04b19_Bitmaps,  (GFXglyph *)Font_04b19_Glyphs, 0x20, 0xA0,  14};
