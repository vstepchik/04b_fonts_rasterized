#pragma once
#include <Adafruit_GFX.h>

// Font: 04b11
const uint8_t Font_04b11_Bitmaps[] PROGMEM = {
    0x00, /* 0x20 space */
    0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0x00,     0x00,     0xF0,     0xF0, /* 0x21 exclam */
    0xF3C0,     0xF3C0,     0xF3C0,     0xF3C0, /* 0x22 quotedbl */
    0x3CF0,     0x3CF0,     0xFFFC,     0xFFFC,     0x3CF0,     0x3CF0,     0xFFFC,     0xFFFC,     0x3CF0,     0x3CF0, /* 0x23 numbersign */
    0x3FFC,     0x3FFC,     0xF3C0,     0xF3C0,     0xFFFC,     0xFFFC,     0xF3C,     0xF3C,     0xFFF0,     0xFFF0, /* 0x24 dollar */
    0xF0F0,     0xF0F0,     0xF3C0,     0xF3C0,     0xF00,     0xF00,     0x3CF0,     0x3CF0,     0xF0F0,     0xF0F0, /* 0x25 percent */
    0x3F00,     0x3F00,     0xF3C0,     0xF3C0,     0x3F00,     0x3F00,     0xF3F0,     0xF3F0,     0x3FC0,     0x3FC0, /* 0x26 ampersand */
    0xF0,     0xF0,     0xF0,     0xF0, /* 0x27 quotesingle */
    0x3C,     0x3C,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0x3C,     0x3C, /* 0x28 parenleft */
    0xF0,     0xF0,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0xF0,     0xF0, /* 0x29 parenright */
    0xF3C0,     0xF3C0,     0x3F00,     0x3F00,     0xF3C0,     0xF3C0, /* 0x2A asterisk */
    0xF00,     0xF00,     0xF00,     0xF00,     0xFFF0,     0xFFF0,     0xF00,     0xF00,     0xF00,     0xF00, /* 0x2B plus */
    0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0, /* 0x2C comma */
    0xFFF0,     0xFFF0, /* 0x2D hyphen */
    0xF0,     0xF0,     0xF0,     0xF0, /* 0x2E period */
    0xF0,     0xF0,     0x3C0,     0x3C0,     0xF00,     0xF00,     0x3C00,     0x3C00,     0xF000,     0xF000, /* 0x2F slash */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x30 zero */
    0xFC,     0xFC,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C, /* 0x31 one */
    0xFFC0,     0xFFC0,     0xF0,     0xF0,     0x3FC0,     0x3FC0,     0xF000,     0xF000,     0xFFF0,     0xFFF0, /* 0x32 two */
    0xFFC0,     0xFFC0,     0xF0,     0xF0,     0x3FC0,     0x3FC0,     0xF0,     0xF0,     0xFFC0,     0xFFC0, /* 0x33 three */
    0xFC0,     0xFC0,     0x3FC0,     0x3FC0,     0xF3C0,     0xF3C0,     0xFFF0,     0xFFF0,     0x3C0,     0x3C0, /* 0x34 four */
    0xFFF0,     0xFFF0,     0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF0,     0xF0,     0xFFC0,     0xFFC0, /* 0x35 five */
    0x3FC0,     0x3FC0,     0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x36 six */
    0xFFF0,     0xFFF0,     0xF0,     0xF0,     0x3C0,     0x3C0,     0xF00,     0xF00,     0x3C00,     0x3C00, /* 0x37 seven */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x38 eight */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0,     0xF0,     0xF0,     0x3FC0,     0x3FC0, /* 0x39 nine */
    0xF0,     0xF0,     0x00,     0x00,     0xF0,     0xF0, /* 0x3A colon */
    0xF0,     0xF0,     0x00,     0x00,     0xF0,     0xF0,     0xF0,     0xF0, /* 0x3B semicolon */
    0x0F,     0x0F,     0x3C,     0x3C,     0xF0,     0xF0,     0x3C,     0x3C,     0x0F,     0x0F, /* 0x3C less */
    0xFFF0,     0xFFF0,     0x00,     0x00,     0xFFF0,     0xFFF0, /* 0x3D equal */
    0xF0,     0xF0,     0x3C,     0x3C,     0x0F,     0x0F,     0x3C,     0x3C,     0xF0,     0xF0, /* 0x3E greater */
    0xFFC0,     0xFFC0,     0x3F0,     0x3F0,     0x3FC0,     0x3FC0,     0x00,     0x00,     0x3C00,     0x3C00, /* 0x3F question */
    0x3FF0,     0x3FF0,     0xF03C,     0xF03C,     0xF3FC,     0xF3FC,     0xF33C,     0xF33C,     0x3FF0,     0x3FF0, /* 0x40 at */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xFFF0,     0xFFF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0, /* 0x41 A */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0, /* 0x42 B */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xF000,     0xF000,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x43 C */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0, /* 0x44 D */
    0xFFF0,     0xFFF0,     0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF000,     0xF000,     0xFFF0,     0xFFF0, /* 0x45 E */
    0xFFF0,     0xFFF0,     0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF000,     0xF000,     0xF000,     0xF000, /* 0x46 F */
    0x3FF0,     0x3FF0,     0xF000,     0xF000,     0xF3F0,     0xF3F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0, /* 0x47 G */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFF0,     0xFFF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0, /* 0x48 H */
    0xFF,     0xFF,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0xFF,     0xFF, /* 0x49 I */
    0xFF0,     0xFF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x4A J */
    0xF0F0,     0xF0F0,     0xF3C0,     0xF3C0,     0xFF00,     0xFF00,     0xF3C0,     0xF3C0,     0xF0F0,     0xF0F0, /* 0x4B K */
    0xF000,     0xF000,     0xF000,     0xF000,     0xF000,     0xF000,     0xF000,     0xF000,     0xFFF0,     0xFFF0, /* 0x4C L */
    0xF03C,     0xF03C,     0xFCFC,     0xFCFC,     0xFFFC,     0xFFFC,     0xF33C,     0xF33C,     0xF03C,     0xF03C, /* 0x4D M */
    0xF0F0,     0xF0F0,     0xFCF0,     0xFCF0,     0xFFF0,     0xFFF0,     0xF3F0,     0xF3F0,     0xF0F0,     0xF0F0, /* 0x4E N */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x4F O */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0,     0xF000,     0xF000, /* 0x50 P */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0x3C0,     0x3C0, /* 0x51 Q */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0,     0xF3F0,     0xF3F0, /* 0x52 R */
    0x3FF0,     0x3FF0,     0xF000,     0xF000,     0x3FC0,     0x3FC0,     0xF0,     0xF0,     0xFFC0,     0xFFC0, /* 0x53 S */
    0xFFF0,     0xFFF0,     0xF00,     0xF00,     0xF00,     0xF00,     0xF00,     0xF00,     0xF00,     0xF00, /* 0x54 T */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x55 U */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0x3FC0,     0x3FC0,     0xF00,     0xF00, /* 0x56 V */
    0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xFFFF,     0xFFFF,     0x3C3C,     0x3C3C, /* 0x57 W */
    0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0xF00,     0xF00,     0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0, /* 0x58 X */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0xF00,     0xF00,     0xF00,     0xF00, /* 0x59 Y */
    0xFFF0,     0xFFF0,     0x3C0,     0x3C0,     0xF00,     0xF00,     0x3C00,     0x3C00,     0xFFF0,     0xFFF0, /* 0x5A Z */
    0xFC,     0xFC,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xFC,     0xFC, /* 0x5B bracketleft */
    0xF000,     0xF000,     0x3C00,     0x3C00,     0xF00,     0xF00,     0x3C0,     0x3C0,     0xF0,     0xF0, /* 0x5C backslash */
    0xFC,     0xFC,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0x3C,     0xFC,     0xFC, /* 0x5D bracketright */
    0x3C,     0x3C,     0xFF,     0xFF, /* 0x5E asciicircum */
    0xFFF0,     0xFFF0, /* 0x5F underscore */
    0x00, /* 0x60 grave */
    0x3FF0,     0x3FF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0, /* 0x61 a */
    0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0, /* 0x62 b */
    0x3FF0,     0x3FF0,     0xF000,     0xF000,     0xF000,     0xF000,     0x3FF0,     0x3FF0, /* 0x63 c */
    0xF0,     0xF0,     0x3FF0,     0x3FF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0, /* 0x64 d */
    0x3FC0,     0x3FC0,     0xF3F0,     0xF3F0,     0xFC00,     0xFC00,     0x3FC0,     0x3FC0, /* 0x65 e */
    0xFF0,     0xFF0,     0x3C00,     0x3C00,     0xFFF0,     0xFFF0,     0x3C00,     0x3C00,     0x3C00,     0x3C00, /* 0x66 f */
    0x3FF0,     0x3FF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0,     0x3C0,     0x3C0,     0xF00,     0xF00, /* 0x67 g */
    0xF000,     0xF000,     0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0, /* 0x68 h */
    0xF0,     0xF0,     0x00,     0x00,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0, /* 0x69 i */
    0x0F,     0x0F,     0x00,     0x00,     0x0F,     0x0F,     0x0F,     0x0F,     0x0F,     0x0F,     0x3C,     0x3C,     0xF0,     0xF0, /* 0x6A j */
    0xF000,     0xF000,     0xF3F0,     0xF3F0,     0xFF00,     0xFF00,     0xF3C0,     0xF3C0,     0xF0F0,     0xF0F0, /* 0x6B k */
    0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0, /* 0x6C l */
    0xFFFC,     0xFFFC,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF, /* 0x6D m */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0, /* 0x6E n */
    0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x6F o */
    0xFFC0,     0xFFC0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xFFC0,     0xFFC0,     0xF000,     0xF000, /* 0x70 p */
    0x3FF0,     0x3FF0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0,     0xF0,     0xF0, /* 0x71 q */
    0xF3F0,     0xF3F0,     0xFF00,     0xFF00,     0xF000,     0xF000,     0xF000,     0xF000, /* 0x72 r */
    0x3FF0,     0x3FF0,     0xFF00,     0xFF00,     0xFF0,     0xFF0,     0xFFC0,     0xFFC0, /* 0x73 s */
    0x3C00,     0x3C00,     0xFFF0,     0xFFF0,     0x3C00,     0x3C00,     0x3CF0,     0x3CF0,     0xFC0,     0xFC0, /* 0x74 t */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0, /* 0x75 u */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0xF00,     0xF00, /* 0x76 v */
    0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xF3CF,     0xFFFC,     0xFFFC, /* 0x77 w */
    0xF0F0,     0xF0F0,     0x3FC0,     0x3FC0,     0x3FC0,     0x3FC0,     0xF0F0,     0xF0F0, /* 0x78 x */
    0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0xF0F0,     0x3FF0,     0x3FF0,     0xF0,     0xF0,     0x3C0,     0x3C0, /* 0x79 y */
    0xFFF0,     0xFFF0,     0xFC0,     0xFC0,     0x3F00,     0x3F00,     0xFFF0,     0xFFF0, /* 0x7A z */
    0x3F,     0x3F,     0x3C,     0x3C,     0xF0,     0xF0,     0x3C,     0x3C,     0x3F,     0x3F, /* 0x7B braceleft */
    0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0,     0xF0, /* 0x7C bar */
    0xFC,     0xFC,     0x3C,     0x3C,     0x0F,     0x0F,     0x3C,     0x3C,     0xFC,     0xFC, /* 0x7D braceright */
    0x3F,     0x3F,     0xFC,     0xFC, /* 0x7E asciitilde */
    0x00, /* 0xA0 nonbreakingspace */
};

const GFXglyph Font_04b11_Glyphs[] PROGMEM = {
{ 0, 8, 1, 2, 0, -1 }, /* 0x20 space */
{ 1, 8, 10, 5, 0, -10 }, /* 0x21 exclam */
{ 11, 8, 4, 11, 0, -10 }, /* 0x22 quotedbl */
{ 15, 8, 10, 15, 0, -10 }, /* 0x23 numbersign */
{ 25, 8, 10, 15, 0, -10 }, /* 0x24 dollar */
{ 35, 8, 10, 13, 0, -10 }, /* 0x25 percent */
{ 45, 8, 10, 13, 0, -10 }, /* 0x26 ampersand */
{ 55, 8, 4, 5, 0, -10 }, /* 0x27 quotesingle */
{ 59, 8, 10, 7, 0, -10 }, /* 0x28 parenleft */
{ 69, 8, 10, 7, 0, -10 }, /* 0x29 parenright */
{ 79, 8, 6, 11, 0, -10 }, /* 0x2A asterisk */
{ 85, 8, 10, 13, 0, -10 }, /* 0x2B plus */
{ 95, 8, 6, 5, 0, -4 }, /* 0x2C comma */
{ 101, 8, 2, 13, 0, -6 }, /* 0x2D hyphen */
{ 103, 8, 4, 5, 0, -4 }, /* 0x2E period */
{ 107, 8, 10, 13, 0, -10 }, /* 0x2F slash */
{ 117, 8, 10, 13, 0, -10 }, /* 0x30 zero */
{ 127, 8, 10, 7, 0, -10 }, /* 0x31 one */
{ 137, 8, 10, 13, 0, -10 }, /* 0x32 two */
{ 147, 8, 10, 13, 0, -10 }, /* 0x33 three */
{ 157, 8, 10, 13, 0, -10 }, /* 0x34 four */
{ 167, 8, 10, 13, 0, -10 }, /* 0x35 five */
{ 177, 8, 10, 13, 0, -10 }, /* 0x36 six */
{ 187, 8, 10, 13, 0, -10 }, /* 0x37 seven */
{ 197, 8, 10, 13, 0, -10 }, /* 0x38 eight */
{ 207, 8, 10, 13, 0, -10 }, /* 0x39 nine */
{ 217, 8, 6, 5, 0, -8 }, /* 0x3A colon */
{ 223, 8, 8, 5, 0, -8 }, /* 0x3B semicolon */
{ 231, 8, 10, 9, 0, -10 }, /* 0x3C less */
{ 241, 8, 6, 13, 0, -8 }, /* 0x3D equal */
{ 247, 8, 10, 9, 0, -10 }, /* 0x3E greater */
{ 257, 8, 10, 13, 0, -10 }, /* 0x3F question */
{ 267, 8, 10, 15, 0, -10 }, /* 0x40 at */
{ 277, 8, 10, 13, 0, -10 }, /* 0x41 A */
{ 287, 8, 10, 13, 0, -10 }, /* 0x42 B */
{ 297, 8, 10, 13, 0, -10 }, /* 0x43 C */
{ 307, 8, 10, 13, 0, -10 }, /* 0x44 D */
{ 317, 8, 10, 13, 0, -10 }, /* 0x45 E */
{ 327, 8, 10, 13, 0, -10 }, /* 0x46 F */
{ 337, 8, 10, 13, 0, -10 }, /* 0x47 G */
{ 347, 8, 10, 13, 0, -10 }, /* 0x48 H */
{ 357, 8, 10, 9, 0, -10 }, /* 0x49 I */
{ 367, 8, 10, 13, 0, -10 }, /* 0x4A J */
{ 377, 8, 10, 13, 0, -10 }, /* 0x4B K */
{ 387, 8, 10, 13, 0, -10 }, /* 0x4C L */
{ 397, 8, 10, 15, 0, -10 }, /* 0x4D M */
{ 407, 8, 10, 13, 0, -10 }, /* 0x4E N */
{ 417, 8, 10, 13, 0, -10 }, /* 0x4F O */
{ 427, 8, 10, 13, 0, -10 }, /* 0x50 P */
{ 437, 8, 12, 13, 0, -10 }, /* 0x51 Q */
{ 449, 8, 10, 13, 0, -10 }, /* 0x52 R */
{ 459, 8, 10, 13, 0, -10 }, /* 0x53 S */
{ 469, 8, 10, 13, 0, -10 }, /* 0x54 T */
{ 479, 8, 10, 13, 0, -10 }, /* 0x55 U */
{ 489, 8, 10, 13, 0, -10 }, /* 0x56 V */
{ 499, 8, 10, 17, 0, -10 }, /* 0x57 W */
{ 509, 8, 10, 13, 0, -10 }, /* 0x58 X */
{ 519, 8, 10, 13, 0, -10 }, /* 0x59 Y */
{ 529, 8, 10, 13, 0, -10 }, /* 0x5A Z */
{ 539, 8, 10, 7, 0, -10 }, /* 0x5B bracketleft */
{ 549, 8, 10, 13, 0, -10 }, /* 0x5C backslash */
{ 559, 8, 10, 7, 0, -10 }, /* 0x5D bracketright */
{ 569, 8, 4, 9, 0, -10 }, /* 0x5E asciicircum */
{ 573, 8, 2, 13, 0, -2 }, /* 0x5F underscore */
{ 575, 8, 1, 2, 0, -1 }, /* 0x60 grave */
{ 576, 8, 8, 13, 0, -8 }, /* 0x61 a */
{ 584, 8, 10, 13, 0, -10 }, /* 0x62 b */
{ 594, 8, 8, 13, 0, -8 }, /* 0x63 c */
{ 602, 8, 10, 13, 0, -10 }, /* 0x64 d */
{ 612, 8, 8, 13, 0, -8 }, /* 0x65 e */
{ 620, 8, 10, 13, 0, -10 }, /* 0x66 f */
{ 630, 8, 12, 13, 0, -8 }, /* 0x67 g */
{ 642, 8, 10, 13, 0, -10 }, /* 0x68 h */
{ 652, 8, 10, 5, 0, -10 }, /* 0x69 i */
{ 662, 8, 14, 9, 0, -10 }, /* 0x6A j */
{ 676, 8, 10, 13, 0, -10 }, /* 0x6B k */
{ 686, 8, 10, 5, 0, -10 }, /* 0x6C l */
{ 696, 8, 8, 17, 0, -8 }, /* 0x6D m */
{ 704, 8, 8, 13, 0, -8 }, /* 0x6E n */
{ 712, 8, 8, 13, 0, -8 }, /* 0x6F o */
{ 720, 8, 10, 13, 0, -8 }, /* 0x70 p */
{ 730, 8, 10, 13, 0, -8 }, /* 0x71 q */
{ 740, 8, 8, 13, 0, -8 }, /* 0x72 r */
{ 748, 8, 8, 13, 0, -8 }, /* 0x73 s */
{ 756, 8, 10, 13, 0, -10 }, /* 0x74 t */
{ 766, 8, 8, 13, 0, -8 }, /* 0x75 u */
{ 774, 8, 8, 13, 0, -8 }, /* 0x76 v */
{ 782, 8, 8, 17, 0, -8 }, /* 0x77 w */
{ 790, 8, 8, 13, 0, -8 }, /* 0x78 x */
{ 798, 8, 12, 13, 0, -8 }, /* 0x79 y */
{ 810, 8, 8, 13, 0, -8 }, /* 0x7A z */
{ 818, 8, 10, 9, 0, -10 }, /* 0x7B braceleft */
{ 828, 8, 10, 5, 0, -10 }, /* 0x7C bar */
{ 838, 8, 10, 9, 0, -10 }, /* 0x7D braceright */
{ 848, 8, 4, 9, 0, -10 }, /* 0x7E asciitilde */
{ 852, 8, 1, 2, 0, -1 }, /* 0xA0 nonbreakingspace */
};

const GFXfont Font_04b11 PROGMEM = {(uint8_t *) Font_04b11_Bitmaps,  (GFXglyph *)Font_04b11_Glyphs, 0x20, 0xA0,  16};
