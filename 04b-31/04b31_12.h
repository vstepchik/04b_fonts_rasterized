#pragma once
#include <Adafruit_GFX.h>

// Font: 04b31
const uint8_t Font_04b31_Bitmaps[] PROGMEM = {
    0x00, /* 0x20 space */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0x00,     0xC0,     0xC0, /* 0x21 exclam */
    0xD8,     0xD8,     0xD8,     0xD8, /* 0x22 quotedbl */
    0x3030,     0xFFFC,     0xFFFC,     0x3030,     0x3030,     0xFFFC,     0xFFFC,     0x3030, /* 0x23 numbersign */
    0xFFFC,     0xFFFC,     0xC300,     0xFFFC,     0xFFFC,     0x30C,     0xFFFC,     0xFFFC, /* 0x24 dollar */
    0xFF0C,     0xFF0C,     0x0C,     0xFFFC,     0xFFFC,     0xC000,     0xC3FC,     0xC3FC, /* 0x25 percent */
    0xFFF0,     0xFFF0,     0xC000,     0xFFFC,     0xFFFC,     0xC030,     0xFFF0,     0xFFF0, /* 0x26 ampersand */
    0xC0,     0xC0,     0xC0,     0xC0, /* 0x27 quotesingle */
    0x30,     0x30,     0xC0,     0xC0,     0xC0,     0xC0,     0x30,     0x30, /* 0x28 parenleft */
    0xC0,     0xC0,     0x30,     0x30,     0x30,     0x30,     0xC0,     0xC0, /* 0x29 parenright */
    0x30,     0x30,     0xFC,     0xFC,     0x30,     0x30, /* 0x2A asterisk */
    0xC00,     0xC00,     0xC00,     0xFFC0,     0xFFC0,     0xC00,     0xC00,     0xC00, /* 0x2B plus */
    0xC0,     0xC0,     0xC0, /* 0x2C comma */
    0xFFC0,     0xFFC0, /* 0x2D hyphen */
    0xC0,     0xC0, /* 0x2E period */
    0x03,     0x03,     0x0C,     0x0C,     0x30,     0x30,     0xC0,     0xC0, /* 0x2F slash */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x30 zero */
    0xF0,     0xF0,     0x30,     0x30,     0x30,     0x30,     0x30,     0x30, /* 0x31 one */
    0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC, /* 0x32 two */
    0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC, /* 0x33 three */
    0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0x0C, /* 0x34 four */
    0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC, /* 0x35 five */
    0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC, /* 0x36 six */
    0xFFFC,     0xFFFC,     0x0C,     0x0C,     0x0C,     0x0C,     0x0C,     0x0C, /* 0x37 seven */
    0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC, /* 0x38 eight */
    0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC, /* 0x39 nine */
    0xC0,     0xC0,     0x00,     0x00,     0xC0,     0xC0, /* 0x3A colon */
    0xC0,     0xC0,     0x00,     0x00,     0xC0,     0xC0,     0xC0, /* 0x3B semicolon */
    0x30,     0x30,     0xC0,     0xC0,     0x30,     0x30, /* 0x3C less */
    0xFFC0,     0xFFC0,     0x00,     0x00,     0xFFC0,     0xFFC0, /* 0x3D equal */
    0xC0,     0xC0,     0x30,     0x30,     0xC0,     0xC0, /* 0x3E greater */
    0xFFFC,     0xFFFC,     0x0C,     0xFFC,     0xFFC,     0x00,     0xF00,     0xF00, /* 0x3F question */
    0xFFFC,     0xFFFC,     0xC00C,     0xCFFC,     0xCFFC,     0xCC0C,     0xFFFC,     0xFFFC, /* 0x40 at */
    0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C, /* 0x41 A */
    0xFFF0,     0xFFF0,     0xC030,     0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC, /* 0x42 B */
    0xFFFC,     0xFFFC,     0xC000,     0xC000,     0xC000,     0xC000,     0xFFFC,     0xFFFC, /* 0x43 C */
    0xFFF0,     0xFFF0,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x44 D */
    0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC, /* 0x45 E */
    0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC,     0xC000,     0xC000,     0xC000, /* 0x46 F */
    0xFFFC,     0xFFFC,     0xC000,     0xDFFC,     0xDFFC,     0xC00C,     0xFFFC,     0xFFFC, /* 0x47 G */
    0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C, /* 0x48 H */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x49 I */
    0x1FC,     0x1FC,     0x0C,     0x0C,     0x0C,     0x0C,     0xFFFC,     0xFFFC, /* 0x4A J */
    0xC030,     0xC030,     0xC030,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C, /* 0x4B K */
    0xC000,     0xC000,     0xC000,     0xC000,     0xC000,     0xC000,     0xFFFC,     0xFFFC, /* 0x4C L */
    0xFFFC,     0xFFFC,     0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xC30C, /* 0x4D M */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C, /* 0x4E N */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x4F O */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0xC000,     0xC000, /* 0x50 P */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0x300,     0x300, /* 0x51 Q */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0xC030,     0xC030, /* 0x52 R */
    0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC, /* 0x53 S */
    0xFFFC,     0xFFFC,     0x300,     0x300,     0x300,     0x300,     0x300,     0x300, /* 0x54 T */
    0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x55 U */
    0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFF0,     0xFFF0, /* 0x56 V */
    0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xFFFC,     0xFFFC, /* 0x57 W */
    0xC00C,     0xC00C,     0xC00C,     0x3FF0,     0x3FF0,     0xC00C,     0xC00C,     0xC00C, /* 0x58 X */
    0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC, /* 0x59 Y */
    0xFFFC,     0xFFFC,     0x0C,     0xFFFC,     0xFFFC,     0xC000,     0xFFFC,     0xFFFC, /* 0x5A Z */
    0xF0,     0xF0,     0xC0,     0xC0,     0xC0,     0xC0,     0xF0,     0xF0, /* 0x5B bracketleft */
    0xC0,     0xC0,     0x30,     0x30,     0x0C,     0x0C,     0x03,     0x03, /* 0x5C backslash */
    0xF0,     0xF0,     0x30,     0x30,     0x30,     0x30,     0xF0,     0xF0, /* 0x5D bracketright */
    0xFC,     0xFC, /* 0x5E asciicircum */
    0xFFC0,     0xFFC0, /* 0x5F underscore */
    0xF0,     0xF0, /* 0x60 grave */
    0x3FFC,     0x3FFC,     0x0C,     0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC, /* 0x61 a */
    0xC000,     0xC000,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x62 b */
    0xFFFC,     0xFFFC,     0xC000,     0xC000,     0xFFFC,     0xFFFC, /* 0x63 c */
    0x0C,     0x0C,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x64 d */
    0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC,     0xC000,     0xFFF0,     0xFFF0, /* 0x65 e */
    0x3FFC,     0x3FFC,     0x3000,     0xFFFC,     0xFFFC,     0x3000,     0x3000,     0x3000, /* 0x66 f */
    0xFFFC,     0xFFFC,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0x3FFC,     0x3FFC, /* 0x67 g */
    0xC000,     0xC000,     0xC000,     0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C, /* 0x68 h */
    0xC0,     0xC0,     0x00,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x69 i */
    0x0C,     0x0C,     0x00,     0x0C,     0x0C,     0x0C,     0xFFFC,     0xFFFC, /* 0x6A j */
    0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0xC030,     0xC030,     0xC030, /* 0x6B k */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x6C l */
    0xFFFC,     0xFFFC,     0xC30C,     0xC30C,     0xC30C,     0xC30C, /* 0x6D m */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xC00C,     0xC00C, /* 0x6E n */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x6F o */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0xC000,     0xC000, /* 0x70 p */
    0xFFFC,     0xFFFC,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0x0C, /* 0x71 q */
    0xFFFC,     0xFFFC,     0xC000,     0xC000,     0xC000,     0xC000, /* 0x72 r */
    0xFFF0,     0xFFF0,     0xC000,     0xFFFC,     0xFFFC,     0x0C,     0x3FFC,     0x3FFC, /* 0x73 s */
    0x3000,     0x3000,     0xFFFC,     0xFFFC,     0x3000,     0x3000,     0x3FFC,     0x3FFC, /* 0x74 t */
    0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC, /* 0x75 u */
    0xC00C,     0xC00C,     0xC00C,     0xC00C,     0xFFF0,     0xFFF0, /* 0x76 v */
    0xC30C,     0xC30C,     0xC30C,     0xC30C,     0xFFFC,     0xFFFC, /* 0x77 w */
    0xC00C,     0xC00C,     0xC00C,     0x3FF0,     0x3FF0,     0xC00C,     0xC00C,     0xC00C, /* 0x78 x */
    0xC00C,     0xC00C,     0xC00C,     0xFFFC,     0xFFFC,     0x0C,     0x3FFC,     0x3FFC, /* 0x79 y */
    0x3FFC,     0x3FFC,     0x0C,     0xFFFC,     0xFFFC,     0xC000,     0xFFF0,     0xFFF0, /* 0x7A z */
    0x3C,     0x3C,     0x30,     0xF0,     0xF0,     0x30,     0x3C,     0x3C, /* 0x7B braceleft */
    0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0,     0xC0, /* 0x7C bar */
    0xF0,     0xF0,     0x30,     0x3C,     0x3C,     0x30,     0xF0,     0xF0, /* 0x7D braceright */
    0xFC,     0xFC, /* 0x7E asciitilde */
    0x00, /* 0xA0 nonbreakingspace */
};

const GFXglyph Font_04b31_Glyphs[] PROGMEM = {
{ 0, 1, 1, 2, 0, -1 }, /* 0x20 space */
{ 1, 2, 8, 3, 1, -8 }, /* 0x21 exclam */
{ 9, 5, 4, 6, 1, -8 }, /* 0x22 quotedbl */
{ 13, 14, 8, 15, 1, -8 }, /* 0x23 numbersign */
{ 21, 14, 8, 15, 1, -8 }, /* 0x24 dollar */
{ 29, 14, 8, 15, 1, -8 }, /* 0x25 percent */
{ 37, 14, 8, 15, 1, -8 }, /* 0x26 ampersand */
{ 45, 2, 4, 3, 1, -8 }, /* 0x27 quotesingle */
{ 49, 4, 8, 5, 1, -8 }, /* 0x28 parenleft */
{ 57, 4, 8, 5, 1, -8 }, /* 0x29 parenright */
{ 65, 6, 6, 7, 1, -8 }, /* 0x2A asterisk */
{ 71, 10, 8, 11, 1, -8 }, /* 0x2B plus */
{ 79, 2, 3, 3, 1, -2 }, /* 0x2C comma */
{ 82, 10, 2, 11, 1, -5 }, /* 0x2D hyphen */
{ 84, 2, 2, 3, 1, -2 }, /* 0x2E period */
{ 86, 8, 8, 9, 1, -8 }, /* 0x2F slash */
{ 94, 14, 8, 15, 1, -8 }, /* 0x30 zero */
{ 102, 4, 8, 5, 1, -8 }, /* 0x31 one */
{ 110, 14, 8, 15, 1, -8 }, /* 0x32 two */
{ 118, 14, 8, 15, 1, -8 }, /* 0x33 three */
{ 126, 14, 8, 15, 1, -8 }, /* 0x34 four */
{ 134, 14, 8, 15, 1, -8 }, /* 0x35 five */
{ 142, 14, 8, 15, 1, -8 }, /* 0x36 six */
{ 150, 14, 8, 15, 1, -8 }, /* 0x37 seven */
{ 158, 14, 8, 15, 1, -8 }, /* 0x38 eight */
{ 166, 14, 8, 15, 1, -8 }, /* 0x39 nine */
{ 174, 2, 6, 3, 1, -7 }, /* 0x3A colon */
{ 180, 2, 7, 3, 1, -7 }, /* 0x3B semicolon */
{ 187, 4, 6, 5, 1, -7 }, /* 0x3C less */
{ 193, 10, 6, 11, 1, -7 }, /* 0x3D equal */
{ 199, 4, 6, 5, 1, -7 }, /* 0x3E greater */
{ 205, 14, 8, 15, 1, -8 }, /* 0x3F question */
{ 213, 14, 8, 15, 1, -8 }, /* 0x40 at */
{ 221, 14, 8, 15, 1, -8 }, /* 0x41 A */
{ 229, 14, 8, 15, 1, -8 }, /* 0x42 B */
{ 237, 14, 8, 15, 1, -8 }, /* 0x43 C */
{ 245, 14, 8, 15, 1, -8 }, /* 0x44 D */
{ 253, 14, 8, 15, 1, -8 }, /* 0x45 E */
{ 261, 14, 8, 15, 1, -8 }, /* 0x46 F */
{ 269, 14, 8, 15, 1, -8 }, /* 0x47 G */
{ 277, 14, 8, 15, 1, -8 }, /* 0x48 H */
{ 285, 2, 8, 3, 1, -8 }, /* 0x49 I */
{ 293, 14, 8, 15, 1, -8 }, /* 0x4A J */
{ 301, 14, 8, 15, 1, -8 }, /* 0x4B K */
{ 309, 14, 8, 15, 1, -8 }, /* 0x4C L */
{ 317, 14, 8, 15, 1, -8 }, /* 0x4D M */
{ 325, 14, 8, 15, 1, -8 }, /* 0x4E N */
{ 333, 14, 8, 15, 1, -8 }, /* 0x4F O */
{ 341, 14, 8, 15, 1, -8 }, /* 0x50 P */
{ 349, 14, 10, 15, 1, -8 }, /* 0x51 Q */
{ 359, 14, 8, 15, 1, -8 }, /* 0x52 R */
{ 367, 14, 8, 15, 1, -8 }, /* 0x53 S */
{ 375, 14, 8, 15, 1, -8 }, /* 0x54 T */
{ 383, 14, 8, 15, 1, -8 }, /* 0x55 U */
{ 391, 14, 8, 15, 1, -8 }, /* 0x56 V */
{ 399, 14, 8, 15, 1, -8 }, /* 0x57 W */
{ 407, 14, 8, 15, 1, -8 }, /* 0x58 X */
{ 415, 14, 8, 15, 1, -8 }, /* 0x59 Y */
{ 423, 14, 8, 15, 1, -8 }, /* 0x5A Z */
{ 431, 4, 8, 5, 1, -8 }, /* 0x5B bracketleft */
{ 439, 8, 8, 9, 1, -8 }, /* 0x5C backslash */
{ 447, 4, 8, 5, 1, -8 }, /* 0x5D bracketright */
{ 455, 6, 2, 7, 1, -8 }, /* 0x5E asciicircum */
{ 457, 10, 2, 11, 1, -2 }, /* 0x5F underscore */
{ 459, 4, 2, 5, 1, -8 }, /* 0x60 grave */
{ 461, 14, 8, 15, 1, -8 }, /* 0x61 a */
{ 469, 14, 8, 15, 1, -8 }, /* 0x62 b */
{ 477, 14, 6, 15, 1, -6 }, /* 0x63 c */
{ 483, 14, 8, 15, 1, -8 }, /* 0x64 d */
{ 491, 14, 8, 15, 1, -8 }, /* 0x65 e */
{ 499, 14, 8, 15, 1, -8 }, /* 0x66 f */
{ 507, 14, 8, 15, 1, -6 }, /* 0x67 g */
{ 515, 14, 8, 15, 1, -8 }, /* 0x68 h */
{ 523, 2, 8, 3, 1, -8 }, /* 0x69 i */
{ 531, 14, 8, 15, 1, -8 }, /* 0x6A j */
{ 539, 14, 8, 15, 1, -8 }, /* 0x6B k */
{ 547, 2, 8, 3, 1, -8 }, /* 0x6C l */
{ 555, 14, 6, 15, 1, -6 }, /* 0x6D m */
{ 561, 14, 6, 15, 1, -6 }, /* 0x6E n */
{ 567, 14, 6, 15, 1, -6 }, /* 0x6F o */
{ 573, 14, 8, 15, 1, -6 }, /* 0x70 p */
{ 581, 14, 8, 15, 1, -6 }, /* 0x71 q */
{ 589, 14, 6, 15, 1, -6 }, /* 0x72 r */
{ 595, 14, 8, 15, 1, -8 }, /* 0x73 s */
{ 603, 14, 8, 15, 1, -8 }, /* 0x74 t */
{ 611, 14, 6, 15, 1, -6 }, /* 0x75 u */
{ 617, 14, 6, 15, 1, -6 }, /* 0x76 v */
{ 623, 14, 6, 15, 1, -6 }, /* 0x77 w */
{ 629, 14, 8, 15, 1, -8 }, /* 0x78 x */
{ 637, 14, 8, 15, 1, -6 }, /* 0x79 y */
{ 645, 14, 8, 15, 1, -8 }, /* 0x7A z */
{ 653, 6, 8, 7, 1, -8 }, /* 0x7B braceleft */
{ 661, 2, 8, 3, 1, -8 }, /* 0x7C bar */
{ 669, 6, 8, 7, 1, -8 }, /* 0x7D braceright */
{ 677, 6, 2, 7, 1, -8 }, /* 0x7E asciitilde */
{ 679, 1, 1, 2, 0, -1 }, /* 0xA0 nonbreakingspace */
};

const GFXfont Font_04b31 PROGMEM = {(uint8_t *) Font_04b31_Bitmaps,  (GFXglyph *)Font_04b31_Glyphs, 0x20, 0xA0,  12};
